# -*- coding: utf-8 -*-
"""dashboard_app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kEN9bKk1kHKfBnrRvvUxx6pFPNmatlfH
"""

import streamlit as st
import pandas as pd
import os

# === File Paths ===
DATA_PATH = "final_model_data_useful.csv"
SHAP_FOLDER = "shap_visuals"
GPT_FOLDER = "gpt_explanation"

# === Load data ===
df = pd.read_csv(DATA_PATH)

# === Helper: Normalise LAD names ===
def normalise(name):
    return name.strip().lower().replace(" ", "_").replace("-", "_").replace("/", "_")

# === UI ===
st.title("üè° Care Home Investment Dashboard (UK)")
st.write("Explore Local Authority Districts with predicted care home investment potential using SHAP + GPT explanations.")

lad_names = df["Local_Authority"].sort_values().unique()
selected_lad = st.selectbox("üîç Choose a Local Authority District (LAD):", lad_names)

if selected_lad:
    lad_row = df[df["Local_Authority"] == selected_lad].iloc[0]

    st.subheader(f"üìä Investment Summary: {selected_lad}")
    st.markdown(f"""
    - **Investment Score:** `{lad_row['Investment_Potential_Score']:.2f}`
    - **Predicted Label:** `{'üü¢ HIGH' if lad_row['High_Investment_Potential'] == 1 else 'üî¥ LOW'}`
    - **% Aged 65+:** `{lad_row['Percent_65plus']}%`
    - **GDHI per Head:** `¬£{int(lad_row['GDHI_per_head_2022'])}`
    - **House Price Growth:** `{lad_row['House_Price_Growth_%']}%`
    - **Care Homes Count:** `{lad_row['Care_Homes_Count']}`
    - **Care Homes per 10k:** `{lad_row['Care_Homes_per_10k']:.2f}`
    - **% CQC Good:** `{lad_row['%_CQC_Good']}%`
    - **% Requires Improvement:** `{lad_row['%_CQC_RequiresImprovement']}%`
    """)

    # === SHAP image ===
    norm_name = normalise(selected_lad)
    shap_path = os.path.join(SHAP_FOLDER, f"{norm_name}.png")
    if os.path.exists(shap_path):
        st.subheader("üß† SHAP Visualisation")
        st.image(shap_path, use_container_width=True)
    else:
        st.warning("No SHAP image available for this LAD.")

    # === GPT Explanation ===
    gpt_path = os.path.join(GPT_FOLDER, f"{norm_name}.txt")
    if os.path.exists(gpt_path):
        st.subheader("üí¨ GPT Explanation")
        with open(gpt_path, "r", encoding="utf-8") as f:
            st.markdown(f.read())
    else:
        st.info("No GPT explanation available for this LAD.")

# === Footer ===
st.markdown("---")
st.caption("Created as part of MSc Project ‚Äì AI for Care Home Investment Support (2025)")


# Footer
st.markdown("---")
st.caption("MSc Project ‚Äì AI for Care Home Investment Support (2025)")
